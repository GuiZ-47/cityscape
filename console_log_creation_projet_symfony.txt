PowerShell 7.4.1
PS C:\Users\steve> symfony new cityscape --version="7.0.*"
* Creating a new Symfony 7.0.* project with Composer
  (running C:\ProgramData\ComposerSetup\bin\composer.phar create-project symfony/skeleton C:\Users\steve\cityscape 7.0.* --no-interaction)

* Setting up the project under Git version control
  (running git init C:\Users\steve\cityscape)


 [OK] Your project is now ready in C:\Users\steve\cityscape


PS C:\Users\steve> symfony cityscape --webapp

  Command "cityscape" does not exist.

PS C:\Users\steve> symfony help
Symfony CLI version 5.8.11 (c) 2021-2024 Fabien Potencier
Symfony CLI helps developers manage projects, from local code to remote infrastructure

Usage:
  symfony.exe [global options] <command> [command options] [arguments...]

Global options:
  --help, -h                         Show help
  --no-ansi                          Disable ANSI output
  --ansi                             Force ANSI output
  --no-interaction                   Disable all interactions
  --quiet, -q                        Do not output any message
  -v|vv|vvv, --verbose, --log-level  Increase the verbosity of messages: 1 for normal output, 2 and 3 for more verbose outputs and 4 for debug
  -V                                 Print the version

Available commands:
 book
  book:check-requirements, book:check                                         Check that you have all the pre-requisites locally to code while reading the "Symfony: The Fast Track" book
  book:checkout                                                               Check out a step of the "Symfony: The Fast Track" book repository
 cloud
  cloud:clear-cache, cloud:cc                                                 Clear the CLI cache
  cloud:docs                                                                  Open the online documentation
  cloud:multi                                                                 Execute a command on multiple projects
  cloud:web                                                                   Open the project in the Web Console
 cloud:activity
  cloud:activity:cancel                                                       Cancel an activity
  cloud:activity:get                                                          View detailed information on a single activity
  cloud:activity:list, cloud:activities, cloud:act                            Get a list of activities for an environment or project
  cloud:activity:log                                                          Display the log for an activity
 cloud:app
  cloud:app:config-get                                                        View the configuration of an app
  cloud:app:config-validate                                                   Validate the config files of a project
  cloud:app:list, cloud:apps                                                  List apps in the project
 cloud:auth
  cloud:auth:api-token-login                                                  Log in to Platform.sh/Upsun using an API token
  cloud:auth:browser-login, cloud:login                                       Log in to Platform.sh/Upsun via a browser
  cloud:auth:info                                                             Display your account information
  cloud:auth:logout, cloud:logout                                             Log out of Platform.sh/Upsun
  cloud:auth:verify-phone-number                                              Verify your phone number interactively
 cloud:backup
  cloud:backup:create, cloud:backup                                           Make a backup of an environment
  cloud:backup:delete                                                         Delete an environment backup
  cloud:backup:get                                                            View an environment backup
  cloud:backup:list, cloud:backups                                            List available backups of an environment
  cloud:backup:restore                                                        Restore an environment backup
 cloud:certificate
  cloud:certificate:add                                                       Add an SSL certificate to the project
  cloud:certificate:delete                                                    Delete a certificate from the project
  cloud:certificate:get                                                       View a certificate
  cloud:certificate:list, cloud:certificates, cloud:certs                     List project certificates
 cloud:commit
  cloud:commit:get                                                            Show commit details
  cloud:commit:list, cloud:commits                                            List commits
 cloud:db
  cloud:db:dump                                                               Create a local dump of the remote database  cloud:db:sql, cloud:sql                                                     Run SQL on the remote database
 cloud:domain
  cloud:domain:add                                                            Add a new domain to the project
  cloud:domain:delete                                                         Delete a domain from the project
  cloud:domain:get                                                            Show detailed information for a domain
  cloud:domain:list, cloud:domains                                            Get a list of all domains
  cloud:domain:update                                                         Update a domain
 cloud:environment
  cloud:environment:activate                                                  Activate an environment
  cloud:environment:branch, cloud:branch                                      Branch an environment
  cloud:environment:checkout, cloud:checkout                                  Check out an environment
  cloud:environment:debug, environment:debug                                  Debug an environment by switching Symfony to the debug mode temporarily
  cloud:environment:delete                                                    Delete one or more environments
  cloud:environment:http-access, cloud:httpaccess                             Update HTTP access settings for an environment
  cloud:environment:info                                                      Read or set properties for an environment
  cloud:environment:init                                                      Initialize an environment from a public Git repository
  cloud:environment:list, cloud:environments, cloud:env                       Get a list of environments
  cloud:environment:logs, cloud:log                                           Read an environment's logs
  cloud:environment:merge, cloud:merge                                        Merge an environment
  cloud:environment:pause                                                     Pause an environment
  cloud:environment:push, cloud:push, deploy, cloud:deploy                    Push code to an environment
  cloud:environment:redeploy, cloud:redeploy                                  Redeploy an environment
  cloud:environment:relationships, cloud:relationships, cloud:rel             Show an environment's relationships
  cloud:environment:resume                                                    Resume a paused environment
  cloud:environment:scp, cloud:scp                                            Copy files to and from an environment using scp
  cloud:environment:ssh, cloud:ssh                                            SSH to the current environment
  cloud:environment:synchronize, cloud:sync                                   Synchronize an environment's code and/or data from its parent
  cloud:environment:url, cloud:url                                            Get the public URLs of an environment
  cloud:environment:xdebug, cloud:xdebug                                      Open a tunnel to Xdebug on the environment cloud:integration
  cloud:integration:activity:get                                              View detailed information on a single integration activity
  cloud:integration:activity:list, cloud:int:act                              Get a list of activities for an integration
  cloud:integration:activity:log                                              Display the log for an integration activity
  cloud:integration:add                                                       Add an integration to the project
  cloud:integration:delete                                                    Delete an integration from a project
  cloud:integration:get                                                       View details of an integration
  cloud:integration:list, cloud:integrations                                  View a list of project integration(s)
  cloud:integration:update                                                    Update an integration
  cloud:integration:validate                                                  Validate an existing integration
 cloud:metrics
  cloud:metrics:all, cloud:metrics, cloud:met                                 Show CPU, disk and memory metrics for an environment
  cloud:metrics:cpu, cloud:cpu                                                Show CPU usage of an environment
  cloud:metrics:disk-usage, cloud:disk                                        Show disk usage of an environment
  cloud:metrics:memory, cloud:mem, cloud:memory                               Show memory usage of an environment
 cloud:mount
  cloud:mount:download                                                        Download files from a mount, using rsync
  cloud:mount:list, cloud:mounts                                              Get a list of mounts
  cloud:mount:upload                                                          Upload files to a mount, using rsync
 cloud:operation
  cloud:operation:list, cloud:ops                                             List runtime operations on an environment
  cloud:operation:run                                                         Run an operation on the environment
 cloud:organization
  cloud:organization:billing:address                                          View or change an organization's billing address
  cloud:organization:billing:profile                                          View or change an organization's billing profile
  cloud:organization:create                                                   Create a new organization
  cloud:organization:delete                                                   Delete an organization
  cloud:organization:info                                                     View or change organization details
  cloud:organization:list, cloud:orgs, cloud:organizations                    List organizations
  cloud:organization:subscription:list, cloud:org:subs                        List subscriptions within an organization
  cloud:organization:user:add                                                 Invite a user to an organization
  cloud:organization:user:delete                                              Remove a user from an organization
  cloud:organization:user:get                                                 View an organization user
  cloud:organization:user:list, cloud:org:users                               List organization users
  cloud:organization:user:projects, cloud:oups                                List the projects a user can access
  cloud:organization:user:update                                              Update an organization user
 cloud:project
  cloud:project:clear-build-cache                                             Clear a project's build cache
  cloud:project:create, cloud:create                                          Create a new project
  cloud:project:delete                                                        Delete a project
  cloud:project:get, cloud:get                                                Clone a project locally
  cloud:project:info                                                          Read or set properties for a project
  cloud:project:list, cloud:projects, cloud:pro                               Get a list of all active projects
  cloud:project:set-remote, cloud:set-remote                                  Set the remote project for the current Git repository
 cloud:repo
  cloud:repo:cat                                                              Read a file in the project repository
  cloud:repo:ls                                                               List files in the project repository
  cloud:repo:read, cloud:read                                                 Read a directory or file in the project repository
 cloud:route
  cloud:route:get                                                             View detailed information about a route
  cloud:route:list, cloud:routes                                              List all routes for an environment
 cloud:service
  cloud:service:list, cloud:services                                          List services in the project
  cloud:service:mongo:dump, cloud:mongodump                                   Create a binary archive dump of data from MongoDB
  cloud:service:mongo:export, cloud:mongoexport                               Export data from MongoDB
  cloud:service:mongo:restore, cloud:mongorestore                             Restore a binary archive dump of data into MongoDB
  cloud:service:mongo:shell, cloud:mongo                                      Use the MongoDB shell
  cloud:service:redis-cli, cloud:redis                                        Access the Redis CLI
 cloud:source-operation
  cloud:source-operation:list, cloud:source-ops                               List source operations on an environment
  cloud:source-operation:run                                                  Run a source operation
 cloud:ssh-cert
  cloud:ssh-cert:load                                                         Generate an SSH certificate
 cloud:ssh-key
  cloud:ssh-key:add                                                           Add a new SSH key
  cloud:ssh-key:delete                                                        Delete an SSH key
  cloud:ssh-key:list, cloud:ssh-keys                                          Get a list of SSH keys in your account
 cloud:subscription
  cloud:subscription:info                                                     Read or modify subscription properties
 cloud:team
  cloud:team:create                                                           Create a new team
  cloud:team:delete                                                           Delete a team
  cloud:team:get                                                              View a team
  cloud:team:list, cloud:teams                                                List teams
  cloud:team:project:add                                                      Add project(s) to a team
  cloud:team:project:delete                                                   Remove a project from a team
  cloud:team:project:list, cloud:team:projects, cloud:team:pro                List projects in a team
  cloud:team:update                                                           Update a team
  cloud:team:user:add                                                         Add a user to a team
  cloud:team:user:delete                                                      Remove a user from a team
  cloud:team:user:list, cloud:team:users                                      List users in a team
 cloud:tunnel
  cloud:tunnel:close                                                          Close SSH tunnels
  cloud:tunnel:info                                                           View relationship info for SSH tunnels
  cloud:tunnel:list, cloud:tunnels                                            List SSH tunnels
  cloud:tunnel:open                                                           Open SSH tunnels to an app's relationships  cloud:tunnel:single                                                         Open a single SSH tunnel to an app relationship
 cloud:user
  cloud:user:add                                                              Add a user to the project
  cloud:user:delete                                                           Delete a user from the project
  cloud:user:get                                                              View a user's role(s)
  cloud:user:list, cloud:users                                                List project users
  cloud:user:update                                                           Update user role(s) on a project
 cloud:variable
  cloud:variable:create                                                       Create a variable
  cloud:variable:delete                                                       Delete a variable
  cloud:variable:get, cloud:vget                                              View a variable
  cloud:variable:list, cloud:variables, cloud:var                             List variables
  cloud:variable:update                                                       Update a variable
 cloud:worker
  cloud:worker:list, cloud:workers                                            Get a list of all deployed workers
 local
  local:check:requirements, check:requirements, check:req                     Checks requirements for running Symfony and gives useful recommendations to optimize PHP for Symfony.
  local:check:security, security:check, check:security, local:security:check  Check security issues in project dependencies
  local:new, new                                                              Create a new Symfony project
  local:php:list                                                              List locally available PHP versions
  local:php:refresh                                                           Auto-discover the list of available PHP version
  local:proxy:domain:attach, proxy:domain:attach                              Attach a local domain for the proxy
  local:proxy:domain:detach, proxy:domain:detach                              Detach domains from the proxy
  local:proxy:start, proxy:start                                              Start the local proxy server (local domains support)
  local:proxy:status, proxy:status                                            Get the local proxy server status
  local:proxy:stop, proxy:stop                                                Stop the local proxy server
  local:proxy:tld, proxy:tld, proxy:change:tld                                Display or change the TLD for the proxy
  local:proxy:url, proxy:url                                                  Get the local proxy server URL
  local:run, run                                                              Run a program with environment variables set depending on the current context
  local:server:ca:install, server:ca:install                                  Create a local Certificate Authority for serving HTTPS
  local:server:ca:uninstall, server:ca:uninstall                              Uninstall the local Certificate Authority
  local:server:list, server:list                                              List all configured local web servers
  local:server:log, server:log                                                Display local web server logs
  local:server:prod, server:prod                                              Switch a project to use Symfony's production environment
  local:server:start, server:start, serve                                     Run a local web server
  local:server:status, server:status                                          Get the local web server status
  local:server:stop, server:stop                                              Stop the local web server
  local:var:expose-from-tunnel, var:expose-from-tunnel                        Expose tunnel service environment variables locally
 open
  open:local                                                                  Open the local project in a browser
  open:local:rabbitmq                                                         Open the local project RabbitMQ web management interface in a browser
  open:local:service                                                          Open a local service web interface in a browser
  open:local:webmail                                                          Open the local project mail catcher web interface in a browser
 project
  project:init, init                                                          Initialize a new project using templates
 self
  self:help, help, list                                                       Display help for a command or a category of commands
  self:version, version                                                       Display the application version
 var
  var:export                                                                  Export environment variables depending on the current context

Available wrappers:
Runs PHP (version depends on project's configuration).
Environment variables to use Platform.sh/Upsun relationships or Docker services are automatically defined.

  composer                                                       Runs Composer without memory limit
  console                                                        Runs the Symfony Console (bin/console) for current project
  php, pecl, pear, php-fpm, php-cgi, php-config, phpdbg, phpize  Runs the named binary using the configured PHP version

PS C:\Users\steve> symfony new cityscape --version="7.0.*" --webapp

  Project directory cityscape is not empty

PS C:\Users\steve> symfony new cityscape --version="7.0.*" --webapp
* Creating a new Symfony 7.0.* project with Composer
  (running C:\ProgramData\ComposerSetup\bin\composer.phar create-project symfony/skeleton C:\Users\steve\cityscape 7.0.* --no-interaction)

* Setting up the project under Git version control
  (running git init C:\Users\steve\cityscape)

  (running C:\ProgramData\ComposerSetup\bin\composer.phar require webapp --no-interaction)


 [OK] Your project is now ready in C:\Users\steve\cityscape


PS C:\Users\steve> cd cityscape
PS C:\Users\steve\cityscape> symfony make:controller home

  Command "make:controller" does not exist.

PS C:\Users\steve\cityscape> symfony console make:controller home
 created: src/Controller/HomeController.php
 created: templates/home/index.html.twig


  Success!


 Next: Open your new controller class and add some pages!
PS C:\Users\steve\cityscape> symfony console make:controller

 Choose a name for your controller class (e.g. OrangePizzaController):
 > back_dashboard

 created: src/Controller/BackDashboardController.php
 created: templates/back_dashboard/index.html.twig


  Success!


 Next: Open your new controller class and add some pages!
PS C:\Users\steve\cityscape> symfony console make:controller

 Choose a name for your controller class (e.g. OrangeKangarooController):
 > Back\Dashboard

 created: src/Controller/Back/DashboardController.php
 created: templates/back/dashboard/index.html.twig


  Success!


 Next: Open your new controller class and add some pages!
PS C:\Users\steve\cityscape> symfony console make:controller Home


 [ERROR] The file "src/Controller/HomeController.php" can't be generated because it already exists.


PS C:\Users\steve\cityscape> symfony console make:controller Home
 created: src/Controller/HomeController.php
 created: templates/home/index.html.twig


  Success!


 Next: Open your new controller class and add some pages!
PS C:\Users\steve\cityscape> symfony console make:user

 The name of the security user class (e.g. User) [User]:
 >

 Do you want to store user data in the database (via Doctrine)? (yes/no) [yes]:
 >

 Enter a property name that will be the unique "display" name for the user (e.g. email, username, uuid) [email]:
 >

 Will this app need to hash/check user passwords? Choose No if passwords are not needed or will be checked/hashed by some other system (e.g. a single sign-on server).

 Does this app need to hash/check user passwords? (yes/no) [yes]:
 >

 created: src/Entity/User.php
 created: src/Repository/UserRepository.php
 updated: src/Entity/User.php
 updated: config/packages/security.yaml


  Success!


 Next Steps:
   - Review your new App\Entity\User class.
   - Use make:entity to add more fields to your User entity and then run make:migration.
   - Create a way to authenticate! See https://symfony.com/doc/current/security.html
PS C:\Users\steve\cityscape> symfony console doctrine:database:create
Could not create database `app` for connection named default
An exception occurred in the driver: SQLSTATE[HY000] [1045] Access denied for user 'app'@'localhost' (using password: YES)
PS C:\Users\steve\cityscape> symfony console doctrine:database:create
Created database `cityscape` for connection named default
PS C:\Users\steve\cityscape> symfony console make:auth

 What style of authentication do you want? [Empty authenticator]:
  [0] Empty authenticator
  [1] Login form authenticator
 > 1

 The class name of the authenticator to create (e.g. AppCustomAuthenticator):
 > UserAuthenticator

 Choose a name for the controller class (e.g. SecurityController) [SecurityController]:
 >

 Do you want to generate a '/logout' URL? (yes/no) [yes]:
 >

 Do you want to support remember me? (yes/no) [yes]:
 >

 How should remember me be activated? [Activate when the user checks a box]:
  [0] Activate when the user checks a box
  [1] Always activate remember me
 > 0

 created: src/Security/UserAuthenticator.php
 updated: config/packages/security.yaml
 created: src/Controller/SecurityController.php
 created: templates/security/login.html.twig


  Success!


 Next:
 - Customize your new authenticator.
 - Finish the redirect "TODO" in the App\Security\UserAuthenticator::onAuthenticationSuccess() method.
 - Review & adapt the login template: templates/security/login.html.twig.
PS C:\Users\steve\cityscape> symfony console make:registration-form
 Creating a registration form for App\Entity\User

 Do you want to add a #[UniqueEntity] validation attribute to your User class to make sure duplicate accounts aren't created? (yes/no) [yes]:
 >

 Do you want to send an email to verify the user's email address after registration? (yes/no) [yes]:
 >


 [WARNING] We're missing some important components. Don't forget to install these after you're finished.

           composer require symfonycasts/verify-email-bundle


 By default, users are required to be authenticated when they click the verification link that is emailed to them.
 This prevents the user from registering on their laptop, then clicking the link on their phone, without
 having to log in. To allow multi device email verification, we can embed a user id in the verification link.

 Would you like to include the user id in the verification link to allow anonymous email verification? (yes/no) [no]:
 >

 What email address will be used to send registration confirmations? (e.g. mailer@your-domain.com):
 > wontgoquietly@example.com

 What "name" should be associated with that email address? (e.g. Acme Mail Bot):
 > Example Inc.

 Do you want to automatically authenticate the user after registration? (yes/no) [yes]:
 >

 updated: src/Entity/User.php
 updated: src/Entity/User.php
 created: src/Security/EmailVerifier.php
 created: templates/registration/confirmation_email.html.twig
 created: src/Form/RegistrationFormType.php
 created: src/Controller/RegistrationController.php
 created: templates/registration/register.html.twig


  Success!


 Next:
 1) Install some missing packages:
      composer require symfonycasts/verify-email-bundle
 2) In RegistrationController::verifyUserEmail():
    * Customize the last redirectToRoute() after a successful email verification.
    * Make sure you're rendering success flash messages or change the $this->addFlash() line.
 3) Review and customize the form, controller, and templates as needed.
 4) Run "symfony.exe console make:migration" to generate a migration for the newly added User::isVerified property.

 Then open your browser, go to "/register" and enjoy your new form!

PS C:\Users\steve\cityscape> symfony console make:registration-form
 Creating a registration form for App\Entity\User

 Do you want to send an email to verify the user's email address after registration? (yes/no) [yes]:
 >


 [WARNING] We're missing some important components. Don't forget to install these after you're finished.

           composer require symfonycasts/verify-email-bundle


 By default, users are required to be authenticated when they click the verification link that is emailed to them.
 This prevents the user from registering on their laptop, then clicking the link on their phone, without
 having to log in. To allow multi device email verification, we can embed a user id in the verification link.

 Would you like to include the user id in the verification link to allow anonymous email verification? (yes/no) [no]:
 >

 What email address will be used to send registration confirmations? (e.g. mailer@your-domain.com):
 > wontgoquietly@example.com

 What "name" should be associated with that email address? (e.g. Acme Mail Bot):
 > Example Inc.

 Do you want to automatically authenticate the user after registration? (yes/no) [yes]:
 > no

 What route should the user be redirected to after registration?:
  [0 ] _preview_error
  [1 ] _wdt
  [2 ] _profiler_home
  [3 ] _profiler_search
  [4 ] _profiler_search_bar
  [5 ] _profiler_phpinfo
  [6 ] _profiler_xdebug
  [7 ] _profiler_font
  [8 ] _profiler_search_results
  [9 ] _profiler_open_file
  [10] _profiler
  [11] _profiler_router
  [12] _profiler_exception
  [13] _profiler_exception_css
  [14] app_back_dashboard
  [15] app_home
  [16] app_login
  [17] app_logout
 > 16

 Not generating User::isVerified(): method already exists
 Not generating User::setIsVerified(): method already exists
 no change: src/Entity/User.php
 created: src/Security/EmailVerifier.php
 created: templates/registration/confirmation_email.html.twig
 created: src/Form/RegistrationFormType.php
 created: src/Controller/RegistrationController.php
 created: templates/registration/register.html.twig


  Success!


 Next:
 1) Install some missing packages:
      composer require symfonycasts/verify-email-bundle
 2) In RegistrationController::verifyUserEmail():
    * Customize the last redirectToRoute() after a successful email verification.
    * Make sure you're rendering success flash messages or change the $this->addFlash() line.
 3) Review and customize the form, controller, and templates as needed.
 4) Run "symfony.exe console make:migration" to generate a migration for the newly added User::isVerified property.

 Then open your browser, go to "/register" and enjoy your new form!

PS C:\Users\steve\cityscape> composer require symfonycasts/verify-email-bundle
./composer.json has been updated
Running composer update symfonycasts/verify-email-bundle
Loading composer repositories with package information
Updating dependencies
Lock file operations: 1 install, 0 updates, 0 removals
  - Locking symfonycasts/verify-email-bundle (v1.16.2)
Writing lock file
Installing dependencies from lock file (including require-dev)
Package operations: 1 install, 0 updates, 0 removals
    Failed to download symfonycasts/verify-email-bundle from dist: The zip extension and unzip/7z commands are both missing, skipping.
The php.ini used by your command-line PHP is: C:\laragon\bin\php\php-8.3.2-Win32-vs16-x64\php.ini
    Now trying to download from source
  - Syncing symfonycasts/verify-email-bundle (v1.16.2) into cache
  - Installing symfonycasts/verify-email-bundle (v1.16.2): Cloning 572c94ffcf from cache
Generating autoload files
111 packages you are using are looking for funding.
Use the `composer fund` command to find out more!

Symfony operations: 1 recipe (4db145fe66485d85eece99d510cb128e)
  - Configuring symfonycasts/verify-email-bundle (>=v1.16.2): From auto-generated recipe
Executing script cache:clear [OK]
Executing script assets:install public [OK]
Executing script importmap:install [OK]

 What's next?


Some files have been created and/or updated to configure your new packages.
Please review, edit and commit them: these files are yours.

No security vulnerability advisories found.
Using version ^1.16 for symfonycasts/verify-email-bundle
PS C:\Users\steve\cityscape> composer require symfonycasts/reset-password-bundle
./composer.json has been updated
Running composer update symfonycasts/reset-password-bundle
Loading composer repositories with package information
Updating dependencies
Lock file operations: 1 install, 0 updates, 0 removals
  - Locking symfonycasts/reset-password-bundle (v1.20.3)
Writing lock file
Installing dependencies from lock file (including require-dev)
Package operations: 1 install, 0 updates, 0 removals
    Failed to download symfonycasts/reset-password-bundle from dist: The zip extension and unzip/7z commands are both missing, skipping.
The php.ini used by your command-line PHP is: C:\laragon\bin\php\php-8.3.2-Win32-vs16-x64\php.ini
    Now trying to download from source
  - Syncing symfonycasts/reset-password-bundle (v1.20.3) into cache
  - Installing symfonycasts/reset-password-bundle (v1.20.3): Cloning df64d82cca from cache
Generating autoload files
111 packages you are using are looking for funding.
Use the `composer fund` command to find out more!

Symfony operations: 1 recipe (a36c2d80838c3bcdfdce65ac6daa9105)
  - Configuring symfonycasts/reset-password-bundle (>=1.0): From github.com/symfony/recipes:main
Executing script cache:clear [OK]
Executing script assets:install public [OK]
Executing script importmap:install [OK]

 What's next?


Some files have been created and/or updated to configure your new packages.
Please review, edit and commit them: these files are yours.

No security vulnerability advisories found.
Using version ^1.20 for symfonycasts/reset-password-bundle
PS C:\Users\steve\cityscape> symfony console make:reset-password

Let's make a password reset feature!
====================================

 Implementing reset password for App\Entity\User

- ResetPasswordController -
---------------------------

 A named route is used for redirecting after a successful reset. Even a route that does not exist yet can be used here.

 What route should users be redirected to after their password has been successfully reset? [app_home]:
 > app_login

- Email -
---------

 These are used to generate the email code. Don't worry, you can change them in the code later!

 What email address will be used to send reset confirmations? e.g. mailer@your-domain.com:
 > wontgoquietly@example.com

 What "name" should be associated with that email address? e.g. "Acme Mail Bot":
 > Example Inc.

 created: src/Controller/ResetPasswordController.php
 created: src/Entity/ResetPasswordRequest.php
 updated: src/Entity/ResetPasswordRequest.php
 created: src/Repository/ResetPasswordRequestRepository.php
 updated: src/Repository/ResetPasswordRequestRepository.php
 updated: config/packages/reset_password.yaml
 created: src/Form/ResetPasswordRequestFormType.php
 created: src/Form/ChangePasswordFormType.php
 created: templates/reset_password/check_email.html.twig
 created: templates/reset_password/email.html.twig
 created: templates/reset_password/request.html.twig
 created: templates/reset_password/reset.html.twig


  Success!


 Next:
   1) Run "symfony.exe console make:migration" to generate a migration for the new "App\Entity\ResetPasswordRequest" entity.
   2) Review forms in "src/Form" to customize validation and labels.
   3) Review and customize the templates in `templates/reset_password`.
   4) Make sure your MAILER_DSN env var has the correct settings.
   5) Create a "forgot your password link" to the app_forgot_password_request route on your login form.

 Then open your browser, go to "/reset-password" and enjoy!

PS C:\Users\steve\cityscape> symfony console make:migration
 created: migrations/Version20240229102508.php


  Success!


 Review the new migration then run it with symfony.exe console doctrine:migrations:migrate
 See https://symfony.com/doc/current/bundles/DoctrineMigrationsBundle/index.html
PS C:\Users\steve\cityscape> symfony console d:s:u --force
 Updating database schema...

     4 queries were executed


 [OK] Database schema updated successfully!

PS C:\Users\steve\cityscape> symfony console d:s:u --force
 Updating database schema...

     4 queries were executed


 [OK] Database schema updated successfully!


PS C:\Users\steve\cityscape> symfony serve -d

 [WARNING] The local web server is optimized for local development and MUST never be used in a production setup.



 [OK] Web server listening
      The Web server is using PHP CGI 8.3.2
      https://127.0.0.1:8000


Stream the logs via symfony.exe server:log